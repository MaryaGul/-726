import telebot
import webbrowser
from telebot import types
import sqlite3

bot = telebot.TeleBot('6035399858:AAGO4ogIysrMzL5VKyzWYWIRWxHHrJR2NI4')
name = None
@bot.message_handler(commands=['start'])
def startt(message):
    conn = sqlite3.connect('bd.sql')
    cur = conn.cursor()

    cur.execute('CREATE TABLE IF NOT EXISTS users (id int auto_increment primary key,  name varchar(50), psss varchar(50)) ')
    conn.commit()
    cur.close()
    conn.close()
    bot.send_message(message.chat.id, f'Привет сейчас тебя зарегестрируем')
    bot.register_next_step_handler(message, user_name)

def user_name(message):
    global name
    name = message.text.strip()
    bot.send_message(message.chat.id, f'Введите пароль')
    bot.register_next_step_handler(message, user_pass)

def user_pass(message):
    password = message.text.strip()

    conn = sqlite3.connect('bd.sql')
    cur = conn.cursor()

    cur.execute("INSERT INTO users (name, psss) VALUES ('%s', '%s')" % (name, password))
    conn.commit()
    cur.close()
    conn.close()
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('Список пользователей', callback_data='users'))
    bot.send_message(message.chat.id, f'Пользователь зарегестрирован!', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    conn = sqlite3.connect('bd.sql')
    cur = conn.cursor()

    cur.execute('SELECT * FROM users')
    users = cur.fetchall()
    info = ''
    for el in users:
        info += f'Имя: {el[1]}, пароль: {el[2]}\n'
    cur.close()
    conn.close()

    bot.send_message(call.message.chat.id, info)
    '''
    @bot.message_handler(commands=['start'])
    def start(message):
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('Перейти на сайт')
        markup.row(btn1)
        btn2 = types.KeyboardButton('Удалить фото')
        btn3 = types.KeyboardButton('Изменить текст')
        markup.row(btn2, btn3)
        file = open('./phototel.jpg', 'rb')
        bot.send_photo(message.chat.id, file,  reply_markup=markup)
        #bot.send_message(message.chat.id, f'Привет, {message.from_user.first_name} {message.from_user.last_name}', reply_markup=markup)
        bot.register_next_step_handler(message, on_click)
    
def on_click(message):
    if message.text == 'Перейти на сайт':
        bot.send_message(message.chat.id, 'Website is open')
    elif message.text == 'Удалить фото':
        bot.send_message(message.chat.id, 'Photo is deleted')
    '''
@bot.message_handler(commands=['sait', 'websait'])
def main(message):
    webbrowser.open('https://mospolytech.ru/')

@bot.message_handler(commands=['start', 'main', 'hello'])
def main(message):
    bot.send_message(message.chat.id, f'Привет, {message.from_user.first_name} {message.from_user.last_name}')

@bot.message_handler()
def info(message):
    if message.text.lower() == 'привет':
        bot.send_message(message.chat.id, f'Привет, {message.from_user.first_name} {message.from_user.last_name}')
    elif message.text.lower() == 'id':
        bot.reply_to(message, f'ID: {message.from_user.id}')

@bot.message_handler(content_types=['photo'])
def get_photo(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('Перейти на сайт', url='https://mospolytech.ru/')
    markup.row(btn1)
    btn2 = types.InlineKeyboardButton('Удалить фото', callback_data='delete')
    btn3 = types.InlineKeyboardButton('Изменить текст', callback_data='edit')
    markup.row(btn2, btn3)
    bot.reply_to(message, 'Очень красивое фото!', reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'delete':
        bot.delete_message(callback.message.chat.id, callback.message.message_id-1)
    if callback.data == 'edit':
        bot.edit_message_text('Edit text', callback.message.chat.id, callback.message.message_id )

bot.polling(non_stop=True)
